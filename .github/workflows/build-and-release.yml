name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            artifact_name: z2dmp
            asset_name: z2dmp-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            artifact_name: z2dmp.exe
            asset_name: z2dmp-windows-x86_64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            artifact_name: z2dmp
            asset_name: z2dmp-macos-x86_64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo index
      uses: actions/cache@v4
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Cache target directory
      uses: actions/cache@v4
      with:
        path: target
        key: ${{ runner.os }}-target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-target-${{ matrix.target }}-

    - name: Run tests
      run: cargo test --verbose

    - name: Build release binary
      run: cargo build --release --target ${{ matrix.target }}

    - name: Strip binary (Linux and macOS)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create release assets
      run: |
        mkdir -p release-assets
        cd artifacts
        for dir in */; do
          asset_name="${dir%/}"
          if [[ "$asset_name" == *"windows"* ]]; then
            zip -j "../release-assets/${asset_name}.zip" "${dir}"*
          else
            tar -czf "../release-assets/${asset_name}.tar.gz" -C "${dir}" .
          fi
        done

    - name: Extract release notes
      id: extract_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Create release notes
        cat > release-notes.md << EOF
        # Z2Dmp $VERSION
        
        A cross-platform tool for decompressing Microsoft .zdmp crash dump files.
        
        ## Downloads
        
        Choose the appropriate binary for your platform:
        - **Linux (x86_64)**: z2dmp-linux-x86_64.tar.gz
        - **Windows (x86_64)**: z2dmp-windows-x86_64.zip  
        - **macOS (x86_64)**: z2dmp-macos-x86_64.tar.gz
        
        ## Usage
        \`\`\`
        z2dmp <input_file.zdmp> <output_file.dmp>
        \`\`\`
        
        ## Changes
        
        See the commit history for detailed changes in this release.
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.extract_notes.outputs.version }}
        body_path: release-notes.md
        files: release-assets/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
